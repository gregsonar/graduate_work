services:
  db:
    image: postgres:16.0
    volumes:
      - notification_postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  notification-api-test:
      build:
        context: ./notification_api_flask/tests
        dockerfile: ../../docker/development/notification_api_flask/Dockerfile_tests
      volumes:
        - ./notification_api_flask/tests:/usr/src/app/
      env_file:
        - ./.env
      depends_on:
        - notification-api-flask
      networks:
        - backend


  notification-api-flask:
      build:
        context: ./notification_api_flask
        dockerfile: ../docker/development/notification_api_flask/Dockerfile
      volumes:
        - ./notification_api_flask:/usr/src/app/
      ports:
        - "8080:4000"
      env_file:
        - ./.env
      networks:
        - backend

  notification-rabbitmq:
    image: rabbitmq:3.7-management
    restart: always
    env_file:
      - ./.env

  notification_consumer_welcome:
    build:
      context: ./notification_consumer_welcome
      dockerfile: ../docker/development/notification_consumer/Dockerfile
    restart: always
    volumes:
      - ./notification_consumer_welcome:/usr/src/app/
    env_file:
      - ./.env

  notification_consumer_to_all:
      build:
        context: ./notification_consumer_to_all
        dockerfile: ../docker/development/notification_consumer/Dockerfile
      restart: always
      volumes:
        - ./notification_consumer_to_all:/usr/src/app/
      env_file:
        - ./.env

  notification_consumer_instant_email_messages:
      build:
        context: ./notification_consumer_instant_email_messages
        dockerfile: ../docker/development/notification_consumer/Dockerfile
      restart: always
      volumes:
        - ./notification_consumer_instant_email_messages:/usr/src/app/
      env_file:
        - ./.env

  notification_consumer_sheduler:
      build:
        context: ./notification_consumer_sheduler
        dockerfile: ../docker/development/notification_consumer/Dockerfile
      restart: always
      volumes:
        - ./notification_consumer_sheduler:/usr/src/app/
      env_file:
        - ./.env

  notification_db:
    image: postgres:16.0
    volumes:
      - notification_postgres_data:/var/lib/postgresql/data/
      - ./docker/development/notification_db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env

  notification_websockets:
      build:
        context: ./notification_websocket_server
        dockerfile: ../docker/development/notification_websocket_server/Dockerfile
      restart: always
      volumes:
        - ./notification_websocket_server:/usr/src/app/
      env_file:
        - ./.env
      networks:
        - backend


  notification_scheduler_celery_beat:
      build:
        context: ./notification_scheduler
        dockerfile: ../docker/development/notification_scheduler/Dockerfile
      restart: always
      volumes:
        - ./notification_scheduler:/usr/src/notification_scheduler/
      env_file:
        - ./.env

  notification_scheduler_celery_messages:
      build:
        context: ./notification_scheduler
        dockerfile: ../docker/development/notification_scheduler/Dockerfile.generate_message
      restart: always
      volumes:
        - ./notification_scheduler:/usr/src/notification_scheduler/
      env_file:
        - ./.env

  mailer:
      image: mailhog/mailhog
      restart: always
      networks:
        - backend


volumes:
  notification_postgres_data:
